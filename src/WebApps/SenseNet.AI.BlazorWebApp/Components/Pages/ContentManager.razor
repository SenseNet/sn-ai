@page "/contentmanager"
@rendermode InteractiveServer
@using SenseNet.AI.BlazorWebApp.Models
@using SenseNet.AI.Text;
@inject IContentManager _contentManager;
@inject ILogger<ContentManager> _logger;

<h3>ContentManager</h3>

<div class="sn-container-2panels">
    <div class="sn-message-panel">
        <textarea type="text" @bind="userMessage" class="sn-input" />

        <button class="btn btn-primary" @onclick="SendMessage" disabled="@working">Send</button>
        <button class="btn btn-primary" @onclick="ClearPage" disabled="@working">Clear</button>

        <div class="sn-messages">
            @foreach (var message in messages)
            {
                <div class="sn-msg sn-msg-@message.Sender">@message.Message</div>
            }
        </div>
    </div>
    <div class="sn-contentgrid-panel">
        

    </div>

</div>

@if (working)
{
    <div class="loader"></div>
}

@code {
    private string? userMessage;
    private string? threadId;
    private List<AiMessage> messages = new();
    private bool working;

    private async Task SendMessage()
    {
        if (string.IsNullOrEmpty(userMessage))
            return;

        working = true;

        messages.Add(new AiMessage
        {
            Message = userMessage,
            Sender = "user"
        });

        var messageToSend = userMessage;
        userMessage = string.Empty;

        ContentManagerData responseData;

        try
        {
            responseData = await _contentManager
                .InvokeAsync(messageToSend, threadId, CancellationToken.None);
        }
        catch (Exception ex)
        {
            responseData = ContentManagerData.Empty;
            _logger.LogWarning(ex, "Error while sending message to ContentManager");
        }

        if (!string.IsNullOrEmpty(responseData.Text))
        {
            messages.Add(new AiMessage
            {
                Message = responseData.Text,
                Sender = "generator"
            });
        }
        else
        {
            messages.Add(new AiMessage
            {
                Message = "[empty response]",
                Sender = "adminwarning"
            });
        }

        threadId = responseData.ThreadId;
        working = false;
    }

    private void ClearPage()
    {
        messages.Clear();
        userMessage = string.Empty;
        threadId = string.Empty;
    }
}
